{
  "typeScriptReactArrowFunctionComponent": {
    "prefix": "tsfc",
    "body": [
      "import styles from \"./${TM_FILENAME_BASE}.module.scss\"",
      "",
      "export type ${TM_FILENAME_BASE}Props = {",
      "\t",
      "};",
      "",
      "export default function ${TM_FILENAME_BASE}(props: ${TM_FILENAME_BASE}Props): JSX.Element {",
      "\tconst {} = props;",
      "",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t);",
      "}",
      ""
    ],
    "description": "TS React component"
  },
  "componentIndex": {
    "prefix": "cin",
    "body": [
      "export { default as ${TM_DIRECTORY/^.+\\\\(.*)$/$1/} } from \"./${TM_DIRECTORY/^.+\\\\(.*)$/$1/}\";",
      "export type { ${TM_DIRECTORY/^.+\\\\(.*)$/$1/}Props } from \"./${TM_DIRECTORY/^.+\\\\(.*)$/$1/}\";",
      ""
    ]
  },
  "typeScriptContext": {
    "prefix": "tsc",
    "body": [
      "import { useContext, FC, createContext } from \"react\";",
      "",
      "type ${1:${TM_FILENAME_BASE}}ContextType = {};",
      "const ${1:${TM_FILENAME_BASE}}Context = createContext<${1:${TM_FILENAME_BASE}}ContextType | undefined>(undefined);",
      "",
      "type ${1:${TM_FILENAME_BASE}}ContextProviderProps = {};",
      "export const ${1:${TM_FILENAME_BASE}}Provider: FC<${1:${TM_FILENAME_BASE}}ContextProviderProps> = (props) => {",
      "\tconst { children } = props;",
      "",
      "\tconst value = {};",
      "\treturn <${1:${TM_FILENAME_BASE}}Context.Provider value={value}>{children}</${1:${TM_FILENAME_BASE}}Context.Provider>;",
      "};",
      "",
      "export const use${1:${TM_FILENAME_BASE}} = () => {",
      "\tconst context = useContext(${1:${TM_FILENAME_BASE}}Context);",
      "\tif (context === undefined) {",
      "\t\tthrow new Error(\"use${1:${TM_FILENAME_BASE}} must be used within a ${1:${TM_FILENAME_BASE}}Provider\");",
      "\t}",
      "\treturn context;",
      "};",
      ""
    ],
    "description": "TS React context boilerplate"
  }
}
